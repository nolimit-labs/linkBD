/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as appSettingsRouteImport } from './routes/(app)/settings'
import { Route as appSearchRouteImport } from './routes/(app)/search'
import { Route as appImagesRouteImport } from './routes/(app)/images'
import { Route as appFeedRouteImport } from './routes/(app)/feed'
import { Route as appBusinessesRouteImport } from './routes/(app)/businesses'
import { Route as appProfileIdRouteImport } from './routes/(app)/profile/$id'
import { Route as appProfileIdFollowingRouteImport } from './routes/(app)/profile/$id.following'
import { Route as appProfileIdFollowersRouteImport } from './routes/(app)/profile/$id.followers'
import { Route as appOrganizationsIdFollowingRouteImport } from './routes/(app)/organizations/$id.following'

const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsRoute = appSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => appRouteRoute,
} as any)
const appSearchRoute = appSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => appRouteRoute,
} as any)
const appImagesRoute = appImagesRouteImport.update({
  id: '/images',
  path: '/images',
  getParentRoute: () => appRouteRoute,
} as any)
const appFeedRoute = appFeedRouteImport.update({
  id: '/feed',
  path: '/feed',
  getParentRoute: () => appRouteRoute,
} as any)
const appBusinessesRoute = appBusinessesRouteImport.update({
  id: '/businesses',
  path: '/businesses',
  getParentRoute: () => appRouteRoute,
} as any)
const appProfileIdRoute = appProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => appRouteRoute,
} as any)
const appProfileIdFollowingRoute = appProfileIdFollowingRouteImport.update({
  id: '/following',
  path: '/following',
  getParentRoute: () => appProfileIdRoute,
} as any)
const appProfileIdFollowersRoute = appProfileIdFollowersRouteImport.update({
  id: '/followers',
  path: '/followers',
  getParentRoute: () => appProfileIdRoute,
} as any)
const appOrganizationsIdFollowingRoute =
  appOrganizationsIdFollowingRouteImport.update({
    id: '/organizations/$id/following',
    path: '/organizations/$id/following',
    getParentRoute: () => appRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof appRouteRouteWithChildren
  '/businesses': typeof appBusinessesRoute
  '/feed': typeof appFeedRoute
  '/images': typeof appImagesRoute
  '/search': typeof appSearchRoute
  '/settings': typeof appSettingsRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/profile/$id': typeof appProfileIdRouteWithChildren
  '/organizations/$id/following': typeof appOrganizationsIdFollowingRoute
  '/profile/$id/followers': typeof appProfileIdFollowersRoute
  '/profile/$id/following': typeof appProfileIdFollowingRoute
}
export interface FileRoutesByTo {
  '/': typeof appRouteRouteWithChildren
  '/businesses': typeof appBusinessesRoute
  '/feed': typeof appFeedRoute
  '/images': typeof appImagesRoute
  '/search': typeof appSearchRoute
  '/settings': typeof appSettingsRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/profile/$id': typeof appProfileIdRouteWithChildren
  '/organizations/$id/following': typeof appOrganizationsIdFollowingRoute
  '/profile/$id/followers': typeof appProfileIdFollowersRoute
  '/profile/$id/following': typeof appProfileIdFollowingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/businesses': typeof appBusinessesRoute
  '/(app)/feed': typeof appFeedRoute
  '/(app)/images': typeof appImagesRoute
  '/(app)/search': typeof appSearchRoute
  '/(app)/settings': typeof appSettingsRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(app)/profile/$id': typeof appProfileIdRouteWithChildren
  '/(app)/organizations/$id/following': typeof appOrganizationsIdFollowingRoute
  '/(app)/profile/$id/followers': typeof appProfileIdFollowersRoute
  '/(app)/profile/$id/following': typeof appProfileIdFollowingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/businesses'
    | '/feed'
    | '/images'
    | '/search'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/profile/$id'
    | '/organizations/$id/following'
    | '/profile/$id/followers'
    | '/profile/$id/following'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/businesses'
    | '/feed'
    | '/images'
    | '/search'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/profile/$id'
    | '/organizations/$id/following'
    | '/profile/$id/followers'
    | '/profile/$id/following'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/businesses'
    | '/(app)/feed'
    | '/(app)/images'
    | '/(app)/search'
    | '/(app)/settings'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(app)/profile/$id'
    | '/(app)/organizations/$id/following'
    | '/(app)/profile/$id/followers'
    | '/(app)/profile/$id/following'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings': {
      id: '/(app)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/search': {
      id: '/(app)/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof appSearchRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/images': {
      id: '/(app)/images'
      path: '/images'
      fullPath: '/images'
      preLoaderRoute: typeof appImagesRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/feed': {
      id: '/(app)/feed'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof appFeedRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/businesses': {
      id: '/(app)/businesses'
      path: '/businesses'
      fullPath: '/businesses'
      preLoaderRoute: typeof appBusinessesRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/profile/$id': {
      id: '/(app)/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof appProfileIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/profile/$id/following': {
      id: '/(app)/profile/$id/following'
      path: '/following'
      fullPath: '/profile/$id/following'
      preLoaderRoute: typeof appProfileIdFollowingRouteImport
      parentRoute: typeof appProfileIdRoute
    }
    '/(app)/profile/$id/followers': {
      id: '/(app)/profile/$id/followers'
      path: '/followers'
      fullPath: '/profile/$id/followers'
      preLoaderRoute: typeof appProfileIdFollowersRouteImport
      parentRoute: typeof appProfileIdRoute
    }
    '/(app)/organizations/$id/following': {
      id: '/(app)/organizations/$id/following'
      path: '/organizations/$id/following'
      fullPath: '/organizations/$id/following'
      preLoaderRoute: typeof appOrganizationsIdFollowingRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

interface appProfileIdRouteChildren {
  appProfileIdFollowersRoute: typeof appProfileIdFollowersRoute
  appProfileIdFollowingRoute: typeof appProfileIdFollowingRoute
}

const appProfileIdRouteChildren: appProfileIdRouteChildren = {
  appProfileIdFollowersRoute: appProfileIdFollowersRoute,
  appProfileIdFollowingRoute: appProfileIdFollowingRoute,
}

const appProfileIdRouteWithChildren = appProfileIdRoute._addFileChildren(
  appProfileIdRouteChildren,
)

interface appRouteRouteChildren {
  appBusinessesRoute: typeof appBusinessesRoute
  appFeedRoute: typeof appFeedRoute
  appImagesRoute: typeof appImagesRoute
  appSearchRoute: typeof appSearchRoute
  appSettingsRoute: typeof appSettingsRoute
  appProfileIdRoute: typeof appProfileIdRouteWithChildren
  appOrganizationsIdFollowingRoute: typeof appOrganizationsIdFollowingRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appBusinessesRoute: appBusinessesRoute,
  appFeedRoute: appFeedRoute,
  appImagesRoute: appImagesRoute,
  appSearchRoute: appSearchRoute,
  appSettingsRoute: appSettingsRoute,
  appProfileIdRoute: appProfileIdRouteWithChildren,
  appOrganizationsIdFollowingRoute: appOrganizationsIdFollowingRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
