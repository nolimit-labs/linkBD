/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as appUsersRouteImport } from './routes/(app)/users'
import { Route as appOrphanedResourcesRouteImport } from './routes/(app)/orphaned-resources'
import { Route as appOrganizationsRouteImport } from './routes/(app)/organizations'
import { Route as appMigrationsRouteImport } from './routes/(app)/migrations'
import { Route as appProfileIdRouteImport } from './routes/(app)/profile.$id'

const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const appUsersRoute = appUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => appRouteRoute,
} as any)
const appOrphanedResourcesRoute = appOrphanedResourcesRouteImport.update({
  id: '/orphaned-resources',
  path: '/orphaned-resources',
  getParentRoute: () => appRouteRoute,
} as any)
const appOrganizationsRoute = appOrganizationsRouteImport.update({
  id: '/organizations',
  path: '/organizations',
  getParentRoute: () => appRouteRoute,
} as any)
const appMigrationsRoute = appMigrationsRouteImport.update({
  id: '/migrations',
  path: '/migrations',
  getParentRoute: () => appRouteRoute,
} as any)
const appProfileIdRoute = appProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => appRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appRouteRouteWithChildren
  '/migrations': typeof appMigrationsRoute
  '/organizations': typeof appOrganizationsRoute
  '/orphaned-resources': typeof appOrphanedResourcesRoute
  '/users': typeof appUsersRoute
  '/sign-in': typeof authSignInRoute
  '/profile/$id': typeof appProfileIdRoute
}
export interface FileRoutesByTo {
  '/': typeof appRouteRouteWithChildren
  '/migrations': typeof appMigrationsRoute
  '/organizations': typeof appOrganizationsRoute
  '/orphaned-resources': typeof appOrphanedResourcesRoute
  '/users': typeof appUsersRoute
  '/sign-in': typeof authSignInRoute
  '/profile/$id': typeof appProfileIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/migrations': typeof appMigrationsRoute
  '/(app)/organizations': typeof appOrganizationsRoute
  '/(app)/orphaned-resources': typeof appOrphanedResourcesRoute
  '/(app)/users': typeof appUsersRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(app)/profile/$id': typeof appProfileIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/migrations'
    | '/organizations'
    | '/orphaned-resources'
    | '/users'
    | '/sign-in'
    | '/profile/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/migrations'
    | '/organizations'
    | '/orphaned-resources'
    | '/users'
    | '/sign-in'
    | '/profile/$id'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/migrations'
    | '/(app)/organizations'
    | '/(app)/orphaned-resources'
    | '/(app)/users'
    | '/(auth)/sign-in'
    | '/(app)/profile/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  authSignInRoute: typeof authSignInRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/users': {
      id: '/(app)/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof appUsersRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/orphaned-resources': {
      id: '/(app)/orphaned-resources'
      path: '/orphaned-resources'
      fullPath: '/orphaned-resources'
      preLoaderRoute: typeof appOrphanedResourcesRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/organizations': {
      id: '/(app)/organizations'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof appOrganizationsRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/migrations': {
      id: '/(app)/migrations'
      path: '/migrations'
      fullPath: '/migrations'
      preLoaderRoute: typeof appMigrationsRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/profile/$id': {
      id: '/(app)/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof appProfileIdRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

interface appRouteRouteChildren {
  appMigrationsRoute: typeof appMigrationsRoute
  appOrganizationsRoute: typeof appOrganizationsRoute
  appOrphanedResourcesRoute: typeof appOrphanedResourcesRoute
  appUsersRoute: typeof appUsersRoute
  appProfileIdRoute: typeof appProfileIdRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appMigrationsRoute: appMigrationsRoute,
  appOrganizationsRoute: appOrganizationsRoute,
  appOrphanedResourcesRoute: appOrphanedResourcesRoute,
  appUsersRoute: appUsersRoute,
  appProfileIdRoute: appProfileIdRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  authSignInRoute: authSignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
